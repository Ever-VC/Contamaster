/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package views;

import controllers.CuentaControlador;
import controllers.MayorControlador;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import models.Cuenta;
import models.Empresa;
import models.Mayor;

/**
 *
 * @author Ever Vásquez
 */
public class BalanzaComprobacion extends javax.swing.JPanel {
    private Empresa empresa;

    /**
     * Creates new form BalanzaComprobacion
     */
    public BalanzaComprobacion() {
        initComponents();
        CargarBalanza();
    }
    
    public BalanzaComprobacion(Empresa empresa) {
        initComponents();
        this.empresa = empresa;
        jlblNombreEmpresa.setText(empresa.getNombre().toUpperCase());
        jlblFechaBalance.setText("Actualidad (sin mayorizar)");
        CargarBalanza();
    }
    
    public BalanzaComprobacion(Empresa empresa, Date ultimaMayorizacion) {
        initComponents();
        this.empresa = empresa;
        jlblNombreEmpresa.setText(empresa.getNombre().toUpperCase());
        SimpleDateFormat formatoLargo = new SimpleDateFormat("EEEE, d 'de' MMMM 'de' yyyy");
        String fecha = formatoLargo.format(ultimaMayorizacion);
        jlblFechaBalance.setText(fecha);
        CargarBalanza();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        jlblTitulo = new javax.swing.JLabel();
        jpnlEncabezado = new javax.swing.JPanel();
        jlblNombreEmpresa = new javax.swing.JLabel();
        jlblBalanzaTitulo = new javax.swing.JLabel();
        jlblFechaBalance = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtblBanlanceComprobacion = new javax.swing.JTable();

        setBackground(new java.awt.Color(242, 247, 251));

        jlblTitulo.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jlblTitulo.setForeground(new java.awt.Color(0, 51, 51));
        jlblTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlblTitulo.setText("BALANZA DE COMPROBACION");

        jpnlEncabezado.setBackground(new java.awt.Color(242, 247, 251));
        jpnlEncabezado.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jlblNombreEmpresa.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jlblNombreEmpresa.setForeground(new java.awt.Color(0, 102, 153));
        jlblNombreEmpresa.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlblNombreEmpresa.setText("NOMBRE DE LA EMPRESA");

        jlblBalanzaTitulo.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jlblBalanzaTitulo.setForeground(new java.awt.Color(0, 102, 153));
        jlblBalanzaTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlblBalanzaTitulo.setText("Balanza de comprobación");

        jlblFechaBalance.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jlblFechaBalance.setForeground(new java.awt.Color(0, 102, 153));
        jlblFechaBalance.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlblFechaBalance.setText("30 de abril de 2010");

        javax.swing.GroupLayout jpnlEncabezadoLayout = new javax.swing.GroupLayout(jpnlEncabezado);
        jpnlEncabezado.setLayout(jpnlEncabezadoLayout);
        jpnlEncabezadoLayout.setHorizontalGroup(
            jpnlEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlEncabezadoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpnlEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlblNombreEmpresa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jlblBalanzaTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jlblFechaBalance, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jpnlEncabezadoLayout.setVerticalGroup(
            jpnlEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlEncabezadoLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jlblNombreEmpresa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlblBalanzaTitulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlblFechaBalance)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jtblBanlanceComprobacion.setBackground(new java.awt.Color(242, 247, 251));
        jtblBanlanceComprobacion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "TITULO DE CLA CUENTA", "DEBE", "HABER"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtblBanlanceComprobacion.setShowGrid(true);
        jtblBanlanceComprobacion.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jtblBanlanceComprobacion);
        if (jtblBanlanceComprobacion.getColumnModel().getColumnCount() > 0) {
            jtblBanlanceComprobacion.getColumnModel().getColumn(0).setResizable(false);
            jtblBanlanceComprobacion.getColumnModel().getColumn(0).setPreferredWidth(300);
            jtblBanlanceComprobacion.getColumnModel().getColumn(1).setResizable(false);
            jtblBanlanceComprobacion.getColumnModel().getColumn(1).setPreferredWidth(20);
            jtblBanlanceComprobacion.getColumnModel().getColumn(2).setResizable(false);
            jtblBanlanceComprobacion.getColumnModel().getColumn(2).setPreferredWidth(20);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlblTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(258, 258, 258)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 527, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(266, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jpnlEncabezado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 647, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jlblTitulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(80, 80, 80)
                .addComponent(jpnlEncabezado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 457, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(78, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    private void CargarBalanza() {
        DefaultTableModel modelo = new DefaultTableModel();
        modelo = (DefaultTableModel)jtblBanlanceComprobacion.getModel();
        modelo.setRowCount(0);//Limpia todas los registros de la tabla (indicando que no quiere ninguna fila)
        
        List<Cuenta> lstCuentas = CuentaControlador.Instancia().GetListaCuentasPorEmpresa(empresa.getId());
        double totalDebe = 0.00;
        double totalHaber = 0.00;
        for (Cuenta cuenta : lstCuentas) {
            String tipoCuenta = cuenta.getTipo();
            if (tipoCuenta.equals("Activo Normal") || tipoCuenta.equals("Gastos") || tipoCuenta.equals("Retiros")) {
                totalDebe += cuenta.getSaldo().doubleValue();
                modelo.addRow(new Object[]{cuenta.getNombre(), "$" + cuenta.getSaldo(), ""});
            } else {
                totalHaber += cuenta.getSaldo().doubleValue();
                modelo.addRow(new Object[]{cuenta.getNombre(), "", "$" + cuenta.getSaldo()});
            }
            /*
            List<Mayor> lstMayorizaciones = MayorControlador.Instancia().GetListaRegistrosAlMayorPorCuenta(cuenta);
            Mayor ultimoMayor = null;
            
            if (lstMayorizaciones.size() > 0) {
                ultimoMayor = lstMayorizaciones.getLast();
            }
            
            if (ultimoMayor != null) {
                totalDebe += ultimoMayor.getTotalDebe().doubleValue();
                totalHaber += ultimoMayor.getTotalHaber().doubleValue();
                modelo.addRow(new Object[]{cuenta.getNombre(), "$" + ultimoMayor.getTotalDebe(), "$" + ultimoMayor.getTotalHaber()});
            } else {
               modelo.addRow(new Object[]{cuenta.getNombre(), "$0.00", "$0.00"}); 
            }*/
        }
        modelo.addRow(new Object[]{"Total", "$" + totalDebe, "$" + totalHaber}); 
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel jlblBalanzaTitulo;
    private javax.swing.JLabel jlblFechaBalance;
    private javax.swing.JLabel jlblNombreEmpresa;
    private javax.swing.JLabel jlblTitulo;
    private javax.swing.JPanel jpnlEncabezado;
    private javax.swing.JTable jtblBanlanceComprobacion;
    // End of variables declaration//GEN-END:variables
}
